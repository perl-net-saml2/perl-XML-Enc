use strict;
use warnings;
use Test::More tests => 6;
use XML::Enc;
use MIME::Base64 qw/decode_base64/;

my $base64 = <<'BASE64AES';

BASE64AES

my $xml = decode_base64($base64);

ok($xml, "Got encrypted AES XML");

my $decrypter = XML::Enc->new(
    {
        key                 => 't/sign-private.pem',
        no_xml_declaration  => 1
    }
);

ok($decrypter->decrypt($xml) =~ /68351fcad4f2/, "Successfully Decrypted AES");

$base64 = <<'BASE64DES';
PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0
YzpTQU1MOjIuMDphc3NlcnRpb24iIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6
bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIElEPSJwZng2OWRkYTgzZi1i
OTNlLTYzNDMtZGE1Ny1jYTFhNGNjNzJjMzIiIFZlcnNpb249IjIuMCIgSXNz
dWVJbnN0YW50PSIyMDIyLTAzLTE5VDAyOjUzOjE3WiIgSW5SZXNwb25zZVRv
PSJORVRTQU1MMl9kMzg0ZjkyMDA3NDZkMDA5ZmVjN2ZjMWE3ZjJmNjFhZiI+
PHNhbWw6SXNzdWVyPmh0dHBzOi8vYXBwLm9uZWxvZ2luLmNvbS9zYW1sL21l
dGFkYXRhLzM0YTM1MzcwLTgxM2QtNDQ4Ni04OTU4LWE1MGU5M2UxZjIzNTwv
c2FtbDpJc3N1ZXI+PGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3
dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+PGRzOlNpZ25lZEluZm8+PGRz
OkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3
LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz48ZHM6U2lnbmF0dXJl
TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94
bWxkc2lnLW1vcmUjcnNhLXNoYTI1NiIvPjxkczpSZWZlcmVuY2UgVVJJPSIj
cGZ4NjlkZGE4M2YtYjkzZS02MzQzLWRhNTctY2ExYTRjYzcyYzMyIj48ZHM6
VHJhbnNmb3Jtcz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3
dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUi
Lz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcv
MjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PC9kczpUcmFuc2Zvcm1zPjxkczpE
aWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAx
LzA0L3htbGVuYyNzaGEyNTYiLz48ZHM6RGlnZXN0VmFsdWU+djRlQmQyMjZJ
Q05iMHFXYVNiQUwwS0l5TmVMNGFFUVJFUjNIdHVva0JTST08L2RzOkRpZ2Vz
dFZhbHVlPjwvZHM6UmVmZXJlbmNlPjwvZHM6U2lnbmVkSW5mbz48ZHM6U2ln
bmF0dXJlVmFsdWU+cXVNOVJuOE94WWl5am5Hb1FVUkthUU0rTkdUd1lFUXRG
NzRNRmJMSjl0NmgydDdwd0FtV01EcTFraDhLcTJ3L2JreVZ2eEZYaEhBYUx4
dzQ1K0dSU3NjeEwzK3p4R2xHMGcvWDJpZnBxMEJBSXduM1VsQ3VEWEpOUlFH
L0QybkxsSHZqY1lJSkt3enJMNytYc29qcVhTdFF2bFF3Q2tpbDBPaCtWRUta
Nko2bzcrWEFkQmwzVW93ak53ZTRWQVJhV2hlN2oyOFB4YThnQ1UzdytTTmtO
RGRHK3NBNzZLQ2NXTGpVdGhBN3pMY1VBU2N6MDE4UVVCbVhYeUVWcHBVR1ZD
RmM1L1k2eTV3eVRKYmM3WUNrb3paVUZpL2R4SWJ0RlVnVEZtWk5SajU5SWVD
MHFrSm16MjJFK3VEUTg2SUJzT2hEMk5waXZvaWUzSW5wT1NjKy9VWFh3alpW
b05UclRaN29lS3ZlUm9VbHFTWlY2MmpESmIwOURHR2x0YXBDSkxycnVIZ0VS
cUc4RjBTUnlDVWcwWGRFdmZKK1RSVmUxOSs2bVhjMFd1VHBoSVdvNDNYNHhv
QjA3YnQ2aXJIM045dGZsazFmSnBFcURWRDdKVWFJdnZ2UHF4UEtMOTdDUGRU
NThDZE9KSVJIZm11TkVKZnVjb0JZc1prTDk0eWxqdzBGMTJOa0daU0wyeG5S
MGFRckcyL0Jvc0FkcDBQM3E4cnRiaUhxRjRvamJidmx6STAxcXZLY21RdXZ0
cHdQUTNZYnJYTHhGWkdXRXZYREtJRzJ1YmpvcXhQNE5tRW9VZUlOZG5xcEVZ
S0VDYURITFIzV3JYSCtvNnIvbWh5VXVtOUxPNmdXTWRqRG9HVDBDYSswRUxm
Q2ZWZGQvbnFmZVFrZFNMUEdkdVk9PC9kczpTaWduYXR1cmVWYWx1ZT48ZHM6
S2V5SW5mbz48ZHM6WDUwOURhdGE+PGRzOlg1MDlDZXJ0aWZpY2F0ZT5NSUlH
RnpDQ0EvK2dBd0lCQWdJVVJuK3IvbVY0RDhldHMvd2dldmhHeDBsYVljVXdE
UVlKS29aSWh2Y05BUUVOQlFBd1dERUxNQWtHQTFVRUJoTUNWVk14RURBT0Jn
TlZCQW9NQjFOc2VYSmhhVzR4RlRBVEJnTlZCQXNNREU5dVpVeHZaMmx1SUVs
a1VERWdNQjRHQTFVRUF3d1hUMjVsVEc5bmFXNGdRV05qYjNWdWRDQXhNRFV5
TmpNd0hoY05Nakl3TXpFeE1UUXdOak0wV2hjTk1qY3dNekV4TVRRd05qTTBX
akJZTVFzd0NRWURWUVFHRXdKVlV6RVFNQTRHQTFVRUNnd0hVMng1Y21GcGJq
RVZNQk1HQTFVRUN3d01UMjVsVEc5bmFXNGdTV1JRTVNBd0hnWURWUVFEREJk
UGJtVk1iMmRwYmlCQlkyTnZkVzUwSURFd05USTJNekNDQWlJd0RRWUpLb1pJ
aHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFNcjI1aVZ6L1l0VFZWNGhG
amdYdFdHc1RnYjV2ZjNuT1FyeVlrdjY0V0w5a3RNdmpYbkNiN2NiRENJU3VL
RzFCOUF0eVBWU2diVTNjWkdlMFJlckY4VzB6NVc3YlY2aHlBU0NURUhJam5k
RHdubGEraVJjRUs1M3ZQeDNoMmZDS2JoV3UzMFg0QmVyMi8rUkxmNDVFbkpj
aVY2Z0plZGc2NzlQUnRzdlU3aEcxR0JpWHFqQmRqaEpQdEVnYStPLy9BODVJ
VjRQaHNUWW9xSDlneFg3d2hzRzVRckdIdjBRajNGZnRsSlR1Q0hkTkJQa2Iz
a1ExR3IxWjhJeVY4TFpxbmlGdWhRNGJ5OFNaSlh1N0hXQ05kbmtPUmk3MTRm
a3VRdEpKSEl1V3BnOHArZGJVV2FGL2ZvMmdTNThRWlhoQnh2VTdOM0lselFw
eC9oWmlvSUJxajEydVRQNytlQ0g5OHppVE4zYTZobmlSNWtsenp1a21PaCt3
R3V6M3Q1OW56elVLb2tkVk1BWWZ3Rmk0OVJNQXlhWjRMblRHSVMxZVlwWGY5
dWpGci9OV3VQVWZIRk80WWpudE5JbEh0RG4wOVFLUWtlODk5Z1NIeXVUUER0
V2FpZ3g2Zjd3eHNsanlkclZvVXJPcFdNQWdGQ2RFUmNDZElFdU5hcVNhbnBv
WWV6eWNNTC8rS1RTUmg4S2dWVnlMNm9XK3JrbVczbU1pSDUwT3czK0g2bG1G
bndoUzQ3dnh4NC9IZ1RrWkhsM3M0cTN2emxwaVY1eURHUWVkWnF1SzdaRTNm
a3lyWTM0Y3VJVWZyQ0xPdVJBUkQ0K0dSYnh1MEF1N0x6N21kTXNtYlc4RG9S
R1kwSURPZHVJYnZKMGFRV2xnMnJKVmxmOW1GRTBYQ1RpbVN0SEFnTUJBQUdq
Z2Rnd2dkVXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWFqQm83
THNkYkViSzUwTklhY0RLaXFQdldsTXdnWlVHQTFVZEl3U0JqVENCaW9BVWFq
Qm83THNkYkViSzUwTklhY0RLaXFQdldsT2hYS1JhTUZneEN6QUpCZ05WQkFZ
VEFsVlRNUkF3RGdZRFZRUUtEQWRUYkhseVlXbHVNUlV3RXdZRFZRUUxEQXhQ
Ym1WTWIyZHBiaUJKWkZBeElEQWVCZ05WQkFNTUYwOXVaVXh2WjJsdUlFRmpZ
MjkxYm5RZ01UQTFNall6Z2hSR2Y2ditaWGdQeDYyei9DQjYrRWJIU1ZwaHhU
QU9CZ05WSFE4QkFmOEVCQU1DQjRBd0RRWUpLb1pJaHZjTkFRRU5CUUFEZ2dJ
QkFESzh4bE5kT29yRGRudmxhcFJzNURmd0ZmMEk4SDNWOUVPVTJJS2w4Nzla
WWQ5NzQ3SzhEUGpJY25NSFFLN3FzZXJZUERibEp1K1lFeUhqZ251cmpwVHN0
ZTRqWFpLYU56aUtoVEtSOGFHMWZ3RzZJcmQxZktoZjBtUVJNN2dCSFRPZjJy
ZGoyNXZ0SGlER1pBNUhmK0xyV0p4WEQyMTFjdTN6UzdDOUNjUmhGUUpRNXBm
dGE0cElrdGl6bmhmWjFtcmtOM2dZMTVLeWMwcjBBZG95RVluQytVVXpxZGQv
c3lJdWpPZzZJdml1UGd4QWdNS2ZaNXRxZEdWNUMySGc5bFJZVFB4ZU53cVM5
K2pwL1lqUk8ya1lEWW44eW00WWR4TzlvVmgvekZYTUN2RWErQmRHWWpYZzFh
RWswNWt4WXVNb0lvSm5JTFJRWjg1WkxBVUUwclVhYmlxNFN2WDZYZXFHaU0r
bjJiOFcreENPN3NtVFRYZ2VaV0pLbWhhNVNLdVV1aXFSTkRvWktSRlhmemg5
SG94MjZIV3RyS2pSbDRqQkh2cmZHU0x0Sm8zcDgxZ2xtNU8raTNZT3FJUXVj
QnRJVXhqanQ5eCtwNlJMZE9BbGd3dUVjZERWdjU5YkNQWTJOL1dhMjVhQTNX
ZkxGN3U3RjJMMjRUSEt0V0tQd2pwSHkzWXBjYldac1ZUWUltMk9leUM5bUlx
U1lmYUhIbkRLNU8rNEhqck9OTHF4L1JGOWlkNytLc2w3YjgvdXdvOGVPd2VW
ZXo5bmxTUGd1cS9PaDdRLytpY0xBSUpxLzIweHlIKzE5dGVaRXhkSUwycklC
amcwdmNZbytvOWRDVGJRTkhJM2lPTHVsaHV4OEI5UDFzblh2dkdIVlA5R2Ez
REREM2taQ1JuZzwvZHM6WDUwOUNlcnRpZmljYXRlPjwvZHM6WDUwOURhdGE+
PC9kczpLZXlJbmZvPjwvZHM6U2lnbmF0dXJlPjxzYW1scDpTdGF0dXM+PHNh
bWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1M
OjIuMDpzdGF0dXM6U3VjY2VzcyIvPjwvc2FtbHA6U3RhdHVzPjxzYW1sOkVu
Y3J5cHRlZEFzc2VydGlvbj48eGVuYzpFbmNyeXB0ZWREYXRhIHhtbG5zOnhl
bmM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jIyIgVHlwZT0i
aHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjRWxlbWVudCI+PHhl
bmM6RW5jcnlwdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMu
b3JnLzIwMDEvMDQveG1sZW5jI3RyaXBsZWRlcy1jYmMiLz48ZHM6S2V5SW5m
byB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2ln
IyI+PHhlbmM6RW5jcnlwdGVkS2V5Pjx4ZW5jOkVuY3J5cHRpb25NZXRob2Qg
QWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNy
c2EtMV81Ii8+PHhlbmM6Q2lwaGVyRGF0YT48eGVuYzpDaXBoZXJWYWx1ZT5G
djY5R1NseWtZOVNLdmV5UndxMEZZbk92blJ2TlprTG1aU1NUd29KT1Z3c3BZ
dFZNRXVsSDk0MnIxT1h4MC9vCitxdFZuWVZvTEswMEtUYjdhMFhrbHVqSWVp
aFBRWFRiNkVvRFdwU1Z0SXVDcVA1YWxoZkQ2MVNHSmtQZUkrZE8KZjJWZ0V4
NWJyK1kvZk9jWXV1UjJzZ0kzVjUxKzR0SlNydm0zU3gzWHhUbTJVYXcrcFFj
VWZjTGRKaEFLeCtnYwo1TEtHNGNLeFNUUUlZOVgyMDFqMlhNYXQvMFdGQ3hq
bTFvT3NXN21RenBNTmZBaGhXMWl0OEJsYWsrMTdTR0dkCms2QTMxVUxoK2o3
dmM1TUk4bDJCRHBBNFlFdGpVTld5OSswcERrT2Znb0pMRE5DT29mVGQvdEFh
azd0TnBYSUcKVFBuQms0VzA3cXh5SCsrMlh0Q0xhN3ZHYTBQUERrcU1oWThS
aTQrSlBjTm00ZlY0c0NsZXdpMXptSVlUcU9lVApIbDhBNmIrNjg4LzFOR3RJ
czU0dU9mcWF1b0hYb2Nua2paVHR6QjVnc2o0dkJMdE5yb2xaUHRuT3diRWYv
d2YyCkx4UXJOT0pnMzJIQVpSaGJIeE9MY2RzMnI1bmtGRm9sVUxzQklaRXNH
bThSYWx2eTk4czVzblowektYVi9EcTMKLzhhN3FFbTArZVVGK3JVSzVDRUNF
MFpzWjdJTzFqOUlqZE9DbGozb3I2KzRnSDYwOXNvaWVHdjh4a2FYbGR3Qgo3
NFErU20yS1EwLzl0RkF5ZGFVbjJ0OEQwZzBDdnBHaVN0U285V3ZPK0NQVWYz
aE9OMzdJWUZ3S2hKTHg0SzhQCkt5UzNoQWRtcUNxeEdXY0txUGg4UldpNHZv
cXZzTmV1bnJHcEtlZ3FXR1E9PC94ZW5jOkNpcGhlclZhbHVlPjwveGVuYzpD
aXBoZXJEYXRhPjwveGVuYzpFbmNyeXB0ZWRLZXk+PC9kczpLZXlJbmZvPjx4
ZW5jOkNpcGhlckRhdGE+PHhlbmM6Q2lwaGVyVmFsdWU+VjZtb2VodURRTzdn
dHptd25yd0UxbHRiOUEvU3FFYmNWcW41Y2ZvSkxSWDI1QTBlNXZqcXBzdlg1
WXRISzlvSwpHUTF5MU45OGVQZ2hSWXhjdldONXVqYXNScFFTLzZYVFNaZHJZ
SlVHcWVOa3FzQzV6T0VaalNOUTdLOGs1MWRBCk5uOE8yd0tXc3F3bDdIRHEz
T2liZ2VvL1JXOHM3K0ZVVEpqR1RFMHpCZzZHUFlOYkNqZFYyWndxc1BQSjJZ
eE0KRGJsVitER3UzQXcvVHZNVnIrbWkzUDRlR2loNmdxMmFGUklOSWRqanNR
MERwWnVsVVR3Qk1QcDNxRmJ2bWcwbwpiYnppV0RsVHpzUnVWZkRGWXJkakFN
S0xHdDdWSTVvekExN3ZYRVVPTm56WlJSVHJyT1lDc3ZyVjJRamVPTHZUCjkz
QVdCWUsvdnFNWmlsVVFtL2hDRnZtNGd5RUMwMlFwN2pxdllTMmowN3QyeFF2
SHNxK2RGRkhBeHA2cWNqY3MKdCtVUlltL2taaVdsdnNwVlJFeUx2U1FTOWxq
NUlZL2VLTnZwRWpMNitzemhPdHF5V0JWOVpTSkxxTklKRldHSwpKQ3lLQnZR
YllWc1hHcHg0djFPYmxobzNSeU02a2hKWWdoRm9TamhCMmZmOVdGeVYwN3h2
RTIxVDQ0SWxwZUFnCkg1aWJwWm5jY2RzdGJDeHVsczAybVZjdGxjSk9JWTdQ
WklLbWtKL0NOQmxxV01aem55eUVYejJJVlljeUpvQ08KM2FYT1p2TnVXSWww
cDlFd2RxbDBWTXZlNmt0TWlkNUJRVkwzSFZUVTBVcVhuTFVnWHJTUi9semFw
UW9IT0FLMQo3dEcrZDEzRGpCYWowZDZ0NnBQSjlhUExMajFTd0V3NXpVengz
TmhIc0ZabmFNSWpKYzFjVXJkQlIvRmxGdlJrCk1raGRlU05KZVJ4VVJFVG80
dTNDWTNYbktCWTNTQldpRnZ3bkJSNFJ6bk9nQnpYQndGYnhMYnZpdTJVQW56
aFUKT2l0MGJEZjQyMXJid1p2OGFnVGdEM1A3Y0hmZ3NMTHUxcHBCRmtnMHhq
TDZkK2xSNllEZDB1MDQ0bTlXUlZ2NApKTnU1ZlhaaDdBTXo4eEttTEpWbFE4
WW4vVExPT1VJYTZ0QmYxRVorRDNtZ0xGMXArUWl1SjRrWVA2ZlVSMFlOCkRl
SkJpMnpxRUZxbGl1MTBTSHMrNW9mL3UzNXAvVGFTL2NCVU1ZbEhrU2JtMzc0
alg3Ym5POFJiR0JMeldHWXYKbXpqVjRxdmd1b2FRaE9LODExUWtJZ216Qit4
NmRlckNUbTJGSlkxc3lqdzVpcjNQaDdnVEkxWUNabktXY1JZZgpmY2hYZVBp
N2tkRmlXU3FTK2NWZ2tTeUh6MTZZZS9Fa3ZKQ0txQUNZcWRmRHJiWDg0TzRi
Y0xwRzQrVkRMeVZxCmFncWNTVXo1bFhhKzhUeVZNNGcwRkNkeVRtNUYwbGlj
T2s5TlZVazY3cVpxeTlkYTNlZUpRSU50cWJPVFJQV3IKY1NBVDd0dm52ZlBa
T2p6UjByZEplWFJHTkNkcWREUjdnR0lnTTE5WmJsZGt0anRCSTFLVlUya21x
dFo1dFZZUQpoREQ1dGthTDlTR3FFU3F3V2R2WDN4bTl5V0RnRlAxYy9qZWtI
WWNiY2R4Q0VheVBHYmE4VEZ4by9lcDZFWGcxCmpjNXRpby9BeEViOWlRQmRY
VG43dW1FYnluSkcwaUI5U2ZSRERVVmVKQ3FWYlZIaWZFWHJHdjE0RmllLzhh
ZnUKVkkwMHVSKzVHaUNCVFZHQ2NhbGZSSU90QjR4MG5kYW9FQXFxRkxnbUVK
RHFlYnJTSitvRXJ2Z09tNktNb094SApORXM3QStMZWFBTEw1S3RaWjdBTDVN
cEJrWEhidGNLb0pHdlF3aG1lVGhZNjd1T2VUUU0zbWtrSzNrRFBHRGJECmpK
L2ptcndNbnpuci9aeGQ1RXgzQUEvMzZVdlRpRDFqRGVyT01rS3o0OGVndTdY
eFNmOVd3Tzh5ZXlxdjJiaHAKbk96aktMMmovbUpqYWFtaFZ6WXdsbEZmTlRP
Q0VLVmZqNnQ0S3F0SkMrZ0hibkk5clB2aXpGOEQ0SENxT2NRWQpyMGE3bUVK
TGpoektSZS9OSUxKOWUxN0NxOFNrSklNdVA4Z1puem1TaXJJMVR2bWNvK3dm
Z0hzMkQrUUlkU0MzCjVVSmdKYU1acDVtUHJCb2F4YlJ6cnVPemh6T0ZycHlw
dHJ4MWl2S2gzK3NXeVhGS3dvWjN3T1dUV1AzV0Z2YUoKd1RqWmdHeVBYS21h
cGVoZk9kMmxhMlkrTkNZZ01XSUtNYnNoTTlKSlVqUUZ4VWIzVE93eEJycU9r
eWo0b1pubAppTHdqYSt3R3lGeXlEdG1NWUJEcUlWcTZ5K2xKWWg5WUkwQUxK
YUtnYmpjTEVQNWJ5eEJNNml3WjFpZXZ3NUczCkV3SElsSVpiYnlHL0lMbFpP
dXpEZTFmZW9vU1dDV0RPZ2NFak9lb0NvNkJ6QXJTK3h2NnM4aXVDTG5sUERB
QzcKZE5GVHlPazZYSjJEV3Q2MVo1Vm1XRjI0d29oMUtTblpRbHFwZUxCVmNj
VlZ4TWJBTk5oSGcvRVBJdVVmMGJqeQpGaDZ0SkxEYnZjRU1jaStvN3FFakN2
amphT3lLQ2IyOXhSQUlCdjZDNGwxUzhZOWZLZWs4dzh5Vlc5M0RDQnhQCktp
blZiditQR1RNbWY1QzV4MXcrRG5NYVhTQzV0SU01cjJmZndqb1hhUVJ0Uytt
VzJCMlNGaThUZldLSVRwUVEKdUR5NE53bUQrTTdidUFzb3g2RkRMVi8zYnk1
dUJreXdWRnhlZzdyL1ZjS2VQWTA1VWFTZ0QyOVBTUnhrd2pRaApIRkMzNCtq
eG4zK0NrblBnVGRDRzJ1bFVZK01zOFB2WjNKRXRsUmRHTjI4WWZnckQwRTVN
RmhQZXQ0WWYzYVNZCk9qV1lRZ2JDR25kSzYya21mUEFmU2wxTXNXMEZnU3hQ
eWFpd1pwUXkzTm9qem9hYUwwNVIwaUlDYXByOVV5K0IKcHBCNzBZeGgvclpQ
VjBkZDdya0FJTVdleVM4MjVOV2xFWmVOSnp0aGlRU094dE02YVVPN0xQQmU2
bnhjV2xGUgorM1ViQ1E3MFpDUzBtRStvdG5sZURLNkRqeHZ5MUE3UmROS3o0
YkZ2RExxcGNQUDlpOE5pQ3BWRThuWG1zdlVlCmpQS05BQkhoVWVxVWFlUGZz
QWNoZU91OFFGQ2lna3g1K0xMZngrZXM3aHBXWHZFUTlsYjR3ZkJ3Y3hOcWhW
aGIKYU92VVBxaHB4Z3FHUSttZVpTSjZsbWlPNTN3Wmk4WFp1MDVlNlFKNEls
aWpMSUsrdVAwZmdld20yWm5EY1d3VQprODVQMlF0MzJ6L3FpbHZ2M2poYjEy
c1IzZ3pTd1FsT0RZVDJXU0IwS3lBcTlZWmVhTWlLbEt1V2hVVkhEeWk0CjVx
U2dpOENWYXUzdURzZExTWmhVOFlqWkNQUWVQRkN2VGxEOWVWVndyanlhL3FI
WUFCWUZUckU1UTBqeTdjeSsKSTEyTFNUVHZ2VDNhSlc4S0hEb2RVQWRZUlAr
S2RNelMrNmVvNk1aVGk5Yjh6MjdNcVdkYStMaFJTd24vRmRERgpwYjk0bHZG
cmZSMko4V2lrSmpDSHExcEJiTkNVVXJZMDBwT2FjRTlkc1ZpMnB6a3NVblRx
TEdzM1oxVlJockxsCmlLQ2JFLzFUR0FVZFVQQjI5eHdnL2FmMFIvNFlwQTJz
dDJNTTd0THdjYXAzekNTazdwNTQ0eXVVaTAzL2ZKVFQKM1g4NTJ5UGRQK29F
bkpFcjlSZ1dodCs4enEwTkY5aFZHbFRkVjhJTHkyekIzVVlYK0NwNmhUTXk3
RWhEWWxadQpEZlhNVGhMekRsZ2NWM2ViSGxvWXVDaW9JelNieCtZaHhVVDk1
OEFxU0o4RXlSbnhDK3hLK0hqZU5hbXcwWWE4CkNmNHpQWk5TTGFGK3krL0hk
N0JTR0xxSURmeTVSSXpIaG5iRnZtMlU3TW0rSWpaUTdEcUJTbFY2U25VeCtT
R2YKZHZ2Y2NlYjhOTFUzQnRXa2VZME93dW9JdnE1UG4xWDRSMUdHRE1GeEd3
WDlBKzJvVTZ6eGl1Zzh3L1BJWlUwSgpwQmlZQWU3UzhKWT08L3hlbmM6Q2lw
aGVyVmFsdWU+PC94ZW5jOkNpcGhlckRhdGE+PC94ZW5jOkVuY3J5cHRlZERh
dGE+PC9zYW1sOkVuY3J5cHRlZEFzc2VydGlvbj48L3NhbWxwOlJlc3BvbnNl
PgoK
BASE64DES

$xml = decode_base64($base64);

ok($xml, "Got encrypted DES XML");

$decrypter = XML::Enc->new(
    {
        key                 => 't/sign-private.pem',
        no_xml_declaration  => 1
    }
);

ok($decrypter->decrypt($xml) =~ /5e08ab4870dfd2f2a/, "Successfully Decrypted DES");


$base64 = <<'FIRSTGO';
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHhlbmM6RW5jcnlwdGVkRGF0
YSB4bWxuczp4ZW5jPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyMiIFR5cGU9Imh0
dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI0VsZW1lbnQiPjx4ZW5jOkVuY3J5cHRpb25N
ZXRob2QgeG1sbnM6eGVuYz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjIiBBbGdv
cml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3RyaXBsZWRlcy1jYmMiLz48
ZHNpZzpLZXlJbmZvIHhtbG5zOmRzaWc9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNp
ZyMiPjx4ZW5jOkVuY3J5cHRlZEtleSB4bWxuczp4ZW5jPSJodHRwOi8vd3d3LnczLm9yZy8yMDAx
LzA0L3htbGVuYyMiPjx4ZW5jOkVuY3J5cHRpb25NZXRob2QgeG1sbnM6eGVuYz0iaHR0cDovL3d3
dy53My5vcmcvMjAwMS8wNC94bWxlbmMjIiBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIw
MDEvMDQveG1sZW5jI3JzYS0xXzUiLz48ZHNpZzpLZXlJbmZvIHhtbG5zOmRzaWc9Imh0dHA6Ly93
d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxkc2lnOktleU5hbWUgeG1sbnM6ZHNpZz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyIvPjwvZHNpZzpLZXlJbmZvPjx4ZW5jOkNp
cGhlckRhdGEgeG1sbnM6eGVuYz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjIj48
eGVuYzpDaXBoZXJWYWx1ZSB4bWxuczp4ZW5jPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3ht
bGVuYyMiPkthOG9IL3ZFYnZoTWRaNU9UTjRzTTRTdFhnRnlGcjF5NkkvOERUNVhRYXVDcVNoUlVH
TTAyb25WWWlYS3liUFdSdFhrZXlNeGE0NDkKWGQ4U1djM25hNy8zNkRoek1lWGUyRkV3REdGUk01
MUlBMTNuUHozcFpadnIzMVRGMmxSSmg4clFnU3Z1YkZKRUszSldIOE5kL0FZcgpCS1RmYXJ0ZUky
T0p1ZEJvVXdpOEN5QmpjeEs3RStWN3Bib0crSFRzWkZPQjdVM29vZE8ra2JTYXVxTjJucldIenMy
VzRsVU1Od1cvCkFySnZGT0drOGNiTVB0R0hnb1IvNER5QVFCRUovem5vc1BiYjNPdTZCYXhKVW5p
UVR0U3FUOXZLeGpUTFJ3cG1ZTGFGamdWUk0yU2YKbncxT1Y1YjdWUisxMjFZU1dNM3NUaVpzSkth
ck1DREw4eDhLZDUxdUU0R2ZncUVpbFBHSVFCZUZ5N3ZtWjdYa05FVFo0dWx2MzByZgpmdHhDTE9Q
dlpIYkxDd1RnaUEwamU4UW5sUWRvakFTN0lYUkc2TUptUTBnWXFnZVlBelA2N0ExN3ZQeTdZQXZh
d3RwMThXWjhGMHdFCkZoQUg1SWwySUpDUGtKUlNVVUFZSnlkekJac1B5THN1ZjN5Rk5ESnpoV2kx
ZWZLL0c0RmlIY2RoSDRwbERwSDJmRDN1THp3bk8xYmkKeVAwVCtzc25STDZUeTBuMXc2V2RtbUFr
OFZxTlo5TmtXYnAwUlFITHY2bkx4WHkwZVdHcVJRaW9xLzVzTkVnYlhLbGxaU2lWeDhLQgpCb20y
Z1BnWnozNGlJTEtsS2tCWWN3NTFSODlIVDNYSW5adWxPanpQeU5OMk92RC83K29SbHBYbEM0b1Iv
U1Jya3RyWDdtRE56cWs9CjwveGVuYzpDaXBoZXJWYWx1ZT48L3hlbmM6Q2lwaGVyRGF0YT48L3hl
bmM6RW5jcnlwdGVkS2V5PjwvZHNpZzpLZXlJbmZvPjx4ZW5jOkNpcGhlckRhdGEgeG1sbnM6eGVu
Yz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjIj48eGVuYzpDaXBoZXJWYWx1ZSB4
bWxuczp4ZW5jPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyMiPkZJVTZnbkQzWERG
K0xUbjhWSnJVYWVRNk1HYjN6YnJ5Tmxaa3hkL3ZZY0Z4aXQ0b1p6dGVHUXpqbmFlcTEyZG5oMEVC
cWJsUWQrdHIKb1VBM1VGRTZ0THZHYVJVRTlnVmVpMUFPdm5QYVI1cz0KPC94ZW5jOkNpcGhlclZh
bHVlPjwveGVuYzpDaXBoZXJEYXRhPjwveGVuYzpFbmNyeXB0ZWREYXRhPgo=
FIRSTGO

$xml = decode_base64($base64);

ok($xml, "Got encrypted DES XML");

$decrypter = XML::Enc->new(
    {
        key                 => 't/sign-private.pem',
        no_xml_declaration  => 1
    }
);

ok($decrypter->decrypt($xml) =~ /XML-SIG_1/, "Successfully Decrypted DES");

done_testing;
